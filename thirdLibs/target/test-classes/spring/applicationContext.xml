<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/aop
			http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/tx
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/mvc
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.0.xsd"
			default-lazy-init="true" default-init-method="init" default-destroy-method="destroy">
	<bean id="calendarObj1" class="java.util.GregorianCalendar">
	</bean>
	<bean id="demo1" class="org.kanq.service.impl.DemoTest">
	</bean>
	<bean id="demo2" factory-bean="demo1" factory-method="getInstance">
	</bean>
	<bean id="calendarObj2" class="java.util.Calendar" factory-method="getInstance">
	</bean>
	<bean id="calendarObj3" class="java.util.GregorianCalendar"></bean>
	<bean id="dataObj"
		factory-bean="calendarObj3" factory-method="getTime">
	</bean>
	<bean id="testBean" class="org.kanq.dao.ExampleBean" 
		scope="singleton" init-method="init" destroy-method="destroy" depends-on="bean1">
	</bean>
	<bean id="bean1" class="org.kanq.dao.ExampleBean1" lazy-init="true">
	</bean>
	
	<!-- 引入jdbc配置文件 -->
	 <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="locations">  
            <list>  
             <value>classpath:jdbc.properties</value>  
            </list>  
        </property>  
     </bean>  
	
	<!-- 配置数据库源 -->
	<bean id="dataSourceone" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driver" value="${jdbc.driverClassName}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		          <!--initialSize: 初始化连接 -->  
        <property name="initialSize" value="5" />  
                <!--maxIdle: 最大空闲连接 -->  
        <property name="maxIdle" value="10" />  
        <property name="minIdle" value="5" />  
        <property name="maxActive" value="15" />  
        <property name="removeAbandoned" value="true" />  
        <property name="removeAbandonedTimeout" value="180" />  
                <!--maxWait: 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 -->  
        <property name="maxWait" value="3000" />  
        <property name="validationQuery">  
        <value>SELECT 1</value>  
        </property>  
        <property name="testOnBorrow">  
        <value>true</value>  
        </property> 
	</bean>
	<bean id="dataSourcetwo" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driver" value="${sqljdbc.driverClassName}"></property>
		<property name="url" value="${sqljdbc.url}"></property>
		<property name="username" value="${sqljdbc.username}"></property>
		<property name="password" value="${sqljdbc.password}"></property>
		          <!--initialSize: 初始化连接 --> 
		          <!-- 池启动时创建的连接数量 --> 
        <property name="initialSize" value="5" />  
                <!--池里不会被释放的最多空闲连接数量。设置为0时表示无限制-->  
        <property name="maxIdle" value="10" /> 
        		<!-- 在不新建连接的条件下，池中保持空闲的最少连接数 --> 
        <property name="minIdle" value="5" />
        		<!-- 同一时间可以从池分配的最多连接数量。设置为0时表示无限制。 -->  
        <property name="maxActive" value="15" /> 
        		<!--  设置自动回收超时连接  --> 
        <property name="removeAbandoned" value="true" />  
        		<!-- 自动回收超时时间(以秒数为单位)  -->
        <property name="removeAbandonedTimeout" value="180" />  
                <!--maxWait: 超时等待时间以毫秒为单位 6000毫秒/1000等于60秒 -->  
        <property name="maxWait" value="3000" />  
        <property name="validationQuery">  
        <value>SELECT 1</value>  
        </property>  
        <property name="testOnBorrow">  
        <value>true</value>  
        </property> 
	</bean>
	
	<!-- 通过key-value的形式来关联数据源 -->    
    <bean id="dynamicDataSource" class="org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource" >    
    <property name="targetDataSources">    
        <map>    
            <entry value-ref="dataSourceone" key="dataSourceone"></entry>    
           <entry value-ref="dataSourcetwo" key="dataSourcetwo"></entry>    
        </map>    
    </property>
    <!--默认当前的数据源 -->  
    <property name="defaultTargetDataSource" ref="dataSourceone" />    
	</bean>
	
	<!-- JdbcTemplate使用动态数据源的配置管理 -->    
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">    
    	<property name="dataSource">  <ref bean="dynamicDataSource" />    
    	</property>    
	</bean>
	
	<!--  -->       
</beans>